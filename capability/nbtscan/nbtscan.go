package nbtscan

import (
	"strings"

	"github.com/philcantcode/localmapper/cmdb"
	"github.com/philcantcode/localmapper/system"
	"github.com/philcantcode/localmapper/utils"
)

type NBTScan struct {
	IP          string
	NetBIOSName string
	Server      string
	Username    string
	MAC         string
}

func ProcessResults(resultBytes []byte) []NBTScan {
	results := string(resultBytes)
	resultArr := strings.Split(results, "\n")
	nbtResults := []NBTScan{}

	for _, line := range resultArr {
		lineArr := strings.Split(line, ",")

		if len(lineArr) >= 5 {
			res := NBTScan{
				IP:          strings.TrimSpace(lineArr[0]),
				NetBIOSName: strings.TrimSpace(lineArr[1]),
				Server:      strings.TrimSpace(lineArr[2]),
				Username:    strings.TrimSpace(lineArr[3]),
				MAC:         strings.TrimSpace(lineArr[4]),
			}

			nbtResults = append(nbtResults, res)
		}
	}

	return nbtResults
}

func StoreResults(results []NBTScan) {
	for _, res := range results {
		INSERT_NbtScan(res)
	}
}

func ConvertToEntry(results []NBTScan) {
	for _, res := range results {
		sysTags := []cmdb.EntryTag{}

		if res.IP != "" && res.IP != "<unknown>" {
			tag := cmdb.EntryTag{
				Label:       "IP",
				Description: "IPv4 Address",
				DataType:    system.IP,
				Values: []string{
					res.IP,
				},
			}

			sysTags = append(sysTags, tag)
		}

		if res.MAC != "" && res.MAC != "<unknown>" {
			tag := cmdb.EntryTag{
				Label:       "MAC",
				Description: "MAC Address",
				DataType:    system.MAC,
				Values: []string{
					res.MAC,
				},
			}

			sysTags = append(sysTags, tag)
		}

		if res.NetBIOSName != "" && res.NetBIOSName != "<unknown>" {
			tag := cmdb.EntryTag{
				Label:       "NetBIOS Name",
				Description: "NetBIOS HostName",
				DataType:    system.STRING,
				Values: []string{
					res.NetBIOSName,
				},
			}

			sysTags = append(sysTags, tag)
		}

		if res.Server != "" && res.Server != "<server>" && res.Server != "<unknown>" {
			tag := cmdb.EntryTag{
				Label:       "HostName",
				Description: "System HostName",
				DataType:    system.STRING,
				Values: []string{
					res.Server,
				},
			}

			sysTags = append(sysTags, tag)
		}

		if res.Username != "" && res.Username != "<unknown>" {
			tag := cmdb.EntryTag{
				Label:       "Username",
				Description: "System Usernames",
				DataType:    system.USERNAME,
				Values: []string{
					res.Username,
				},
			}

			sysTags = append(sysTags, tag)
		}

		entry := cmdb.Entry{
			Label:       "NetBIOS Scan Result",
			Description: "This is was generated by running a NetBIOS scan (nbtscan).",
			OSILayer:    0,
			CMDBType:    cmdb.PENDING,
			DateSeen:    []string{utils.Now()},
			SysTags:     sysTags,
		}

		cmdb.UpdateOrInsert(entry)
	}
}
